<?php

//Implement hook_entity_info().

function dh_ecology_entity_info() {
  $return = array();
  
  if (db_table_exists('dh_ecology_isolate_type')) {
  $return['dh_ecology_isolate_type'] = array(
    'label' => t('dH Ecology Isolate Type'),
    'entity class' => 'dHEcologyIsolateType',
    'controller class' => 'dHEcologyIsolateTypeController',
    'base table' => 'dh_ecology_isolate_type',
    'fieldable' => TRUE,
    'bundle of' => 'dh_ecology_isolate',
    'bundles' => array(),
    'bundle keys' => array( 
    ),
    'exportable' => TRUE,
    'entity keys' => array (
       'name' => 'bundle',
        'id' => 'itid',
        'label' => 'name',
    ),
    'access callback' => 'dh_feature_access',
    'module' => 'dh_ecology',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/structure/dh_ecology_isolate_type',
      'file' => 'dh_ecology.admin.inc',
      'controller class' => 'dHEcologyIsolateTypeUIController',
    ),
  );
  }

  $return['dh_ecology_isolate'] = array(
    'label' => t('dH Ecology Isolate'),
    // The entity class and controller class extend the classes provided by the
    // Entity API
    'entity class' => 'dHEcologyIsolate',
    'controller class' => 'dHEcologyIsolateController',
    'base table' => 'dh_ecology_isolate',
    'fieldable' => TRUE,
    //'exportable' => TRUE,
    'entity keys' => array (
      'name' => 'iid',
      'id' => 'iid',
      'label' => 'isolate',
	    'bundle' => 'bundle',
    ),
    'bundles' => array(),
    'bundle keys' => array(
	    'bundle' => 'bundle',
    ),
    'property info' => array(),
    //'access callback' => 'dh_feature_access',
    'access callback' => 'dh_ecology_access',
    'module' => 'dh_ecology',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/content/dh_ecology_isolate',
      'file' => 'dh_ecology.admin.inc',
      'controller class' => 'dHEcologyIsolateUIController',
    ),
  );
  
  return $return;
}


function dh_ecology_entity_info_alter(&$entity_info) {

  if (db_table_exists('dh_ecology_isolate_type')) {
    foreach (dh_ecology_isolate_get_types() as $type => $info) {
    //error_log("Setting type info for $type ");
      $entity_info['dh_ecology_isolate']['bundles'][$type] = array(
        'label' => $info->name,
        'admin' => array(
          'path' => 'admin/structure/dh_ecology_isolate_type/manage/%dh_ecology_isolate_type',
          'real path' => 'admin/structure/dh_ecology_isolate_type/manage/' . $type,
          'bundle argument' => 4,
          'access arguments' => array('administer dh_ecology_isolate_type types'),
        ),
      );
    }
  }
}

function dh_ecology_isolate_get_types($bundle_name = NULL) {
  // entity_load will get the Entity controller for our model entity and call the load
  // function of that object - we are loading entities by name here.
  //error_log("Getting list of dh_ecology_isolate_type");
  $bundles = entity_load_multiple_by_name('dh_ecology_isolate_type', isset($bundle_name) ? array($bundle_name) : FALSE);
  return isset($bundle_name) ? reset($bundles) : $bundles;
}

function dh_ecology_isolate_type_load($bundle) {
  return dh_ecology_isolate_get_types($bundle);
}

function dh_ecology_permission() {

  $permissions = array(
    'administer dh_ecology types' => array(
      'title' => t('Administer dH Ecology types'),
      'description' => t('Allows users to configure dH Ecology types and their fields.'),
      'restrict access' => FALSE,
    ),
    'create dh_ecology entities' => array(
      'title' => t('Create dH Ecology entities'),
      'description' => t('Allows users to create dH Ecology entities.'),
      'restrict access' => FALSE,
    ),
    'view dh_ecology entities' => array(
      'title' => t('View dH Ecology types'),
      'description' => t('Allows users to view dH Ecology types.'),
      'restrict access' => FALSE,
    ),
    'edit any dh_ecology entities' => array(
      'title' => t('Edit any dH Ecology types'),
      'description' => t('Allows users to edit any dH Ecology types.'),
      'restrict access' => FALSE,
    ),
    'delete any dh_ecology entities' => array(
      'title' => t('Delete any dH Ecology Entities'),
      'description' => t('Allows users to delete any dH Ecology Entities.'),
      'restrict access' => FALSE,
    ),
  );
  return $permissions;
}

function dh_ecology_access($op, $entity, $account, $entity_type) {
  global $user;
  // can we insert request to find ownership eref;s here?  This would allow us finegrained control!
  //drupal_set_message("Called dh_feature_access $op, " . print_r((array)$entity,1) . ", $account, $entity_type");
  //error_log("Called dh_feature_access $op, " . print_r((array)$entity,1) . ", " .  print_r((array)$account,1) . ", $entity_type");
  if (!isset($account)) {
    $account = $user;
  }
  switch ($op) {
    case 'create':
    return user_access('administer dh_ecology entities', $account)
        || user_access('create dh_ecology entities', $account);
    case 'view':
    return user_access('administer dh_ecology entities', $account)
        || user_access('view dh_ecology entities', $account);
    case 'delete':
    return user_access('administer dh_ecology entities', $account)
        || user_access('delete any dh_ecology entities', $account)
        || user_access('delete own dh_ecology entities', $account);
    case 'edit':
    case 'update':
    return user_access('administer dh_ecology entities')
        || user_access('edit any dh_ecology entities')
        || (user_access('edit own dh_ecology entities') && ($entity->uid == $account->uid));
  }
  return user_access('administer dh_ecology types');
}

function dh_ecology_webform_submission_insert($node, $submission) {
  // do handlers that require access to the sid 
  if (!module_load_include('module', 'dh')) { 
    drupal_set_message("Cannot load dH"); 
    return; 
  }
  if (!module_load_include('inc', 'dh_ecology', 'dh_ecology.webform')) { 
    drupal_set_message("Cannot load dh_ecology.webform.inc"); 
    return; 
  }
  $wfmap = dh_ecology_webform_getmap();
  dh_webform_handler($node, $submission, $wfmap, 'insert');
  return;

}

function dh_ecology_webform_submission_presave($node, &$submission) {
  if (!module_load_include('module', 'dh')) { 
    drupal_set_message("Cannot load dH"); 
    return; 
  }
  if (!module_load_include('inc', 'dh_ecology', 'dh_ecology.webform')) { 
    drupal_set_message("Cannot load dh_ecology.webform.inc"); 
    return; 
  }
  $wfmap = dh_ecology_webform_getmap();
  $submission = dh_webform_handler($node, $submission, $wfmap, 'presave');
  return;
}


//****************************
// Contact Type
//****************************

class dHEcologyIsolateType extends Entity {
  
  public $is_new;
  public $bundle;
  public $name;
  public $itid;
  public $description;
  
  public function __construct($values = array()) {
    parent::__construct($values, 'dh_ecology_isolate_type');
  }
  protected function defaultLabel() {
    return $this->name;
  }

}

class dHEcologyIsolateTypeController extends EntityAPIControllerExportable {
  public function __construct($entityType) {
    parent::__construct($entityType);
  }
  public function create(array $values = array()) {
    // Add values that are specific to our Model
    $values += array( 
      'itid' => '',
      'label' => '',
      'name' => '',
    );
    $feature_type = parent::create($values);
    return $feature_type;
  }
}


class dHEcologyIsolate extends Entity {

  public $is_new;
  public $iid;
  public $isolate;
  public $species;
  public $bundle;
  public $source;
  public $acquisition_num;
  public $sequence;
  public $sequence_location;
  public $ecology;
  public $genus;
  public $host_organism;
  public $primer_f;
  public $primer_r;
  public $uid;

  public function __construct($values = array()) {
    if (!isset($values['modified'])) {
      $values['modified'] = date('U');
    }
    parent::__construct($values, 'dh_ecology_isolate');
  }

  protected function defaultLabel() {
    return $this->isolate;
  }
}


class dHEcologyIsolateController extends EntityAPIControllerExportable {

  public function __construct($entityType) {
    parent::__construct($entityType);
  }

  public function create(array $values = array()) {
    global $user;
    // Add values that are specific to our Model
    $values += array(
    'isolate' => '',
    'bundle' => '',
    'species' => '',
    'source' => '',
    'ecology' => '',
    'genus' => '',
    'host_organism' => '',
    'primer_f' => '',
    'primer_r' => '',
    'acquisition_num' => '',
    'sequence' => null,
    'sequence_location' => ''
    );
    if (!isset($values['uid'])) {
      $values['uid'] = $user->uid;
    }
    $feature_type = parent::create($values);
    return $feature_type;
  }  
  
  public function save($entity, DatabaseTransaction $transaction = NULL) {
    $entity->modified = date('U');
    return parent::save($entity, $transaction);
  }
}

?>