<?php

//Implement hook_entity_info().

function dh_ecology_entity_info() {

  $return['dh_ecology_isolate'] = array(
    'label' => t('dH Ecology Isolate'),
    'entity class' => 'dHEcologyIsolate',
    'controller class' => 'dHEcologyIsolateController',
    'base table' => 'dh_ecology_isolate',
    'fieldable' => TRUE,
   //'bundle of' => '',
    //'exportable' => TRUE,
    'entity keys' => array (
      'name' => 'isolate',
      'id' => 'iid',
      'label' => 'isolate',
    ),
    'bundles' => array(),
    'bundle keys' => array(
    ),
    'property info' => array(),
    'access callback' => 'dh_feature_access',
    'module' => 'dh_ecology',
    // Enable the entity API's admin UI.
    'admin ui' => array(
      'path' => 'admin/content/dh_ecology_isolate',
      'file' => 'dh_ecology.admin.inc',
      'controller class' => 'dHEcologyIsolateUIController',
    ),
  );

  return $return;
}

// Implements hook_view_data_alter().

function dh_ecology_views_data_alter(&$data) {

  // do date setups
  $defaults_date = array(
    'field' => array(
      'handler' => 'views_handler_field_date',
      'click sortable' => TRUE,
    ),
    'sort' => array(
      'handler' => 'views_handler_sort_date',
    ),
    'filter' => array(
      'handler' => 'views_handler_filter_date',
    ),
  );

   $defaults_numeric = array(
      'title' => t('Numeric Field'),
      'help' => t('Numeric Field.'), // The help that appears on the UI,
      'argument' => array(
         'handler' => 'views_handler_argument_numeric',
      ),
      'field' => array(
         'handler' => 'views_handler_field_numeric',
         'click sortable' => TRUE,
                        'float' => TRUE, // enables advanced formatting options
      ),
      'filter' => array(
         'handler' => 'views_handler_filter_numeric',
      ),
      'sort' => array(
         'handler' => 'views_handler_sort',
      )
   );


   $numcols = array();
   $strcols = array();
   $datecols = array();
   foreach ($strcols as $thiscol) {
      $data['dh_ecology_isolate'][$thiscol] = $defaults_string;
      $data['dh_ecology_isolate'][$thiscol]['title'] = t("Ecology Data $thiscol");
      $data['dh_ecology_isolate'][$thiscol]['help'] = t("Ecology $thiscol");
   }
   foreach ($numcols as $thiscol) {
      $data['dh_ecology_isolate'][$thiscol] = $defaults_numeric;
      $data['dh_ecology_isolate'][$thiscol]['title'] = t("Ecology $thiscol");
      $data['dh_ecology_isolate'][$thiscol]['help'] = t("Ecology $thiscol");
   }
   foreach ($datecols as $thiscol) {
      $data['dh_ecology_isolate'][$thiscol]['field'] = $defaults_date['field'];
      $data['dh_ecology_isolate'][$thiscol]['sort'] = $defaults_date['sort'];
      $data['dh_ecology_isolate'][$thiscol]['filter'] = $defaults_date['filter'];
   }

   //foreach ($datecols as $thiscol) {
   //   $data['dh_ecology_isolate'][$thiscol]['filter'] = array('handler' => 'views_handler_filter_date');
   //}


}

function dh_ecology_webform_submission_presave($node, &$submission) {
  if (!module_load_include('module', 'dh')) { 
    drupal_set_message("Cannot load dH"); 
    return; 
  }
  if (!module_load_include('inc', 'dh_ecology', 'dh_ecology.webform')) { 
    drupal_set_message("Cannot load dh_ecology.webform.inc"); 
    return; 
  }
  $wfmap = dh_ecology_webform_getmap();
  dh_webform_handler($node, &$submission, $wfmap);
}

class dHEcologyIsolate extends Entity {

  public $is_new;
  public $iid;
  public $isolate;
  public $species;
  public $source;
  public $acquisition_num;
  public $its_sequence;

  public function __construct($values = array()) {
    parent::__construct($values, 'dh_ecology_isolate');
  }

  protected function defaultLabel() {
    return $this->isolate;
  }
}


class dHEcologyIsolateController extends EntityAPIControllerExportable {

  public function __construct($entityType) {
    parent::__construct($entityType);
  }

  public function create(array $values = array()) {
    // Add values that are specific to our Model
    $values += array(
    'isolate' => '',
    'species' => '',
    'source' => '',
    'acquisition_num' => '',
    'its_sequence' => ''
    );
    $feature_type = parent::create($values);
    return $feature_type;
  }
}

